language: cpp
dist: trusty
compiler: g++
sudo: required

env:
  global:
   # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
   #   via the "travis encrypt" command using the project repo's public key
   - secure: "HdFzmL7TxqaOpr9pKwvqv1TahWO1Ci7Qbt00Yhh/bZozt9OvY2rCwiED0co9sTwIrcKXIUiB0jBkxRTVFgMvqit4N8vvcw7mYD7y7xIetirOd7Q/mw6jV8uqazs1Y0sl3Fs0UHexbrWR3mIAFyQ4bcceq4rX4XIiV6VEuyC9tsE="

# Riss requires cmake version 2.8.8 or higher, Travis might come with 2.8.7
#addons:
#  apt:
#    sources:
#      - ubuntu-toolchain-r-test
#      - george-edison55-precise-backports
#    packages:
#      - cmake-data
#      - cmake
#      - g++-8

before_install:
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -q
  - sudo apt-get remove gcc g++
  - sudo apt-get install g++-8 gcc-8 -y
  - sudo apt-get install picosat
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-8 60 --slave /usr/bin/g++ g++ /usr/bin/g++-8
  - sudo update-alternatives --install /usr/bin/gcc-ar gcc-ar /usr/bin/gcc-ar-8 60
  - sudo update-alternatives --install /usr/bin/gcc-ranlib gcc-ranlib /usr/bin/gcc-ranlib-8 60
  - sudo update-alternatives --install /usr/bin/x86_64-linux-gnu-gcc x86_64-linux-gnu-gcc /usr/bin/x86_64-linux-gnu-gcc-8 60 --slave /usr/bin/x86_64-linux-gnu-g++ x86_64-linux-gnu-g++ /usr/bin/x86_64-linux-gnu-g++-8
  - echo -n | openssl s_client -connect https://scan.coverity.com:443 | sed -ne '/-BEGIN CERTIFICATE-/,/-END CERTIFICATE-/p' | sudo tee -a /etc/ssl/certs/ca-

addons:
  coverity_scan:
    project:
      name: "conp-solutions/riss"
      description: "<Your project description here>"
    notification_email: nmanthey@conp-solutions.com
    build_command_prepend: "<Your build preprocessing command here>"
    build_command: "<Your build command here>"
    branch_pattern: coverity_scan

# install a recent version of astyle
before_script:
  - pwd
  - ls -l ..
  - pushd .
  - cd $(mktemp -d) && wget -O astyle.tar.gz "https://downloads.sourceforge.net/project/astyle/astyle/astyle%203.0.1/astyle_3.0.1_linux.tar.gz" && tar xzf astyle.tar.gz && cd astyle/build/gcc/ && make release && export PATH=$(pwd)/bin:$PATH
  - popd

# run the typical ci checks, run code style check first
script:
  - which g++ && which gcc && g++ -dumpversion
  - regression/test-codestyle.sh
  - scripts/ci.sh
